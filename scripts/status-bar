#!/bin/sh

ptime() {
  echo "CST "$(TZ="Asia/Shanghai" date "+%H:%M") "/ "$(date "+%a %b %e %l:%M %p")
}

pwifi() {
  CARD=$(iw dev | awk '/Interface\s/{print $2}')
  if [[ -n "$(iw $CARD link | grep Connected)" ]]; then
    SSID=$(iw $CARD link | awk '/SSID:/{print substr($2, 0, 2)}')
    echo -e "\uf1eb ${SSID^^}"
  fi
}

pram() {
  echo -e "\uf06d "$(free -h | awk '/^Mem:/{print $3}')
}

pload() {
  echo -e "\uf141 "$(uptime | awk -F '[a-z]:' '{print $2}')
}

pbrtns() {
  echo -e "\uf185 "$(xbacklight | sed "s/\.[0-9]*$/%/")
}

pvol() {
  echo -e "\uf028 "$(amixer get Master | grep -G "^\s*Front Left" | awk -F "[][]" '{print $2}')
}

pbat() {
  STAT=$(acpi -i | sed -E "s/^Battery 0:\s([a-zA-Z\s]*),.*$/\1/" | head -n1)
  PERC=$(acpi -i | grep -m 1 "Battery 0:" | awk -F ', ' '{print $2}' | sed -E "s/([0-9]*)%/\1/")
  if [ $STAT == "Charging" ]; then
    echo -e "\uf0e7 $PERC%" 
  elif [ "$PERC" -gt "94" ]; then 
    echo -e "\uf240 $PERC%"
  elif [ "$PERC" -gt "75" ]; then
    echo -e "\uf241 $PERC%"
  elif [ "$PERC" -gt "50" ]; then
    echo -e "\uf242 $PERC%"
  elif [ "$PERC" -gt "10" ]; then
    echo -e "\uf243 $PERC%"
  elif [ "$PERC" -gt "0" ]; then
    echo -e "\uf244 $PERC%"
  fi
}

pmail() {
  COUNT=$(notmuch count tag:unread)
  echo -e "\uf0e0 $COUNT"
}

pcal() {
  COUNT=$(cat $HOME/.config/calendar.tsv | grep "$(date "+%Y-%m-%d")" | wc -l) 
  echo -e "\uf073 $COUNT"
}

ptask() {
  COUNT=$(task +OVERDUE or due:eod -COMPLETED count)
  echo -e "\uf024 $COUNT"
}

ptimew() {
  INTERVAL=$(timew | awk '/Total/{print $2}')
  if [[ -n "$INTERVAL" ]]; then
    echo -e "\uf017 $INTERVAL"
  fi
}

pmusic() {
  if pgrep -x "ncspot" > /dev/null
  then
    if [[ "$(playerctl status)" = "Playing" ]]; then
      ARTIST=$(playerctl metadata artist)
      TITLE=$(playerctl metadata title)
      echo "$ARTIST - $TITLE"
    fi
  fi
}

render_bar() {
  echo "$(pmusic) $(ptimew)  $(ptask)  $(pmail)  $(pcal)  $(pbat)  $(pvol)  $(pwifi)  $(ptime)"
}

main() {
  while true; do 
    xsetroot -name "$(render_bar)"
    sleep 1
  done
}

main
