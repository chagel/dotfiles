set nocompatible              " required!
filetype off                  " required!
set hidden

set rtp+=~/.vim/rtp/

call plug#begin('~/.vim/plugged')
"Plug 'dang/dwm.vim'
Plug 'airblade/vim-gitgutter'
Plug 'andrewradev/splitjoin.vim'
Plug 'benmills/vimux'
Plug 'catppuccin/nvim', { 'as': 'catppuccin' }
Plug 'christoomey/vim-tmux-navigator'
Plug 'dhruvasagar/vim-table-mode'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'edkolev/tmuxline.vim' 
Plug 'ervandew/supertab'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'junegunn/vim-easy-align'
Plug 'ludovicchabant/vim-gutentags'
Plug 'majutsushi/tagbar'
Plug 'mattn/emmet-vim'
Plug 'mcchrish/nnn.vim'
Plug 'neovim/nvim-lspconfig'
Plug 'ngmy/vim-rubocop'
Plug 'nvim-lua/completion-nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-lua/popup.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'nvim-tree/nvim-tree.lua'
Plug 'nvim-tree/nvim-web-devicons' " optional, for file icons
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'pechorin/any-jump.vim'
Plug 'reedes/vim-wordy'
Plug 'sheerun/vim-polyglot'
Plug 'suan/vim-instant-markdown'
Plug 't9md/vim-choosewin'
Plug 'tmux-Plugins/vim-tmux-focus-events'
Plug 'tpope/vim-commentary'
Plug 'tpope/gem-ctags'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-jdaddy'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-syntastic/syntastic'
Plug 'xolox/vim-misc'
Plug 'xolox/vim-notes'

call plug#end()

set dir=~/.vimswap//,/var/tmp//,/tmp//,.
filetype plugin indent on     " required!

if !has('gui_running') && &term =~ '^\%(screen\|tmux\)'
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

set termguicolors

syntax on

"let g:dracula_colorterm = 0
"let g:dracula_italic = 0
"colorscheme dracula

colorscheme catppuccin " catppuccin-latte, catppuccin-frappe, catppuccin-macchiato, catppuccin-mocha

let g:lightline = { 
      \ 'colorscheme': 'one', 
      \ 'active': {
      \    'right': [ [ 'lineinfo' ], [ 'gitbranch', 'percent' ] ]
      \ },
      \ 'component_function': {
      \   'filename': 'funs#LightLineFilename',
      \   'gitbranch': 'FugitiveHead'
   \ }
      \ }


"set foldmethod=syntax
"set foldlevelstart=1
"highlight Folded guibg=grey guifg=blue

let mapleader=","
let maplocalleader = ",,"
set clipboard+=unnamedplus
set number
set relativenumber

set tw=78
set fo+=t,m
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoread
set laststatus=2
set colorcolumn=80
set nocursorline
"set cursorline
"hi CursorLine term=bold cterm=bold ctermbg=240 
"autocmd InsertLeave,WinEnter * set cursorline
"autocmd InsertEnter,WinLeave * set nocursorline


" search 
set incsearch
set hlsearch
set ignorecase
set smartcase

inoremap jj <Esc>

" splits and panels
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <leader>0 :tablast<CR>
map <leader>1 :tabn 1<cr>
map <leader>2 :tabn 2<cr>
map <leader>3 :tabn 3<cr>
map <leader>4 :tabn 4<cr>
map <leader>5 :tabn 5<cr>
map <leader>6 :tabn 6<cr>
map <leader>7 :tabn 7<cr>
map <leader>8 :tabn 8<cr>
map <leader>9 :tabn 9<cr>
map <leader>h :noh<cr>
map <leader>z :Goyo<cr>
map <leader>g :Tagbar<cr>
map <leader>p :bp<cr>
"map <leader>n :bn<cr>

nnoremap <C-down> :resize -10<CR>
nnoremap <C-up> :resize +10<CR>
nnoremap <C-right> :vertical resize +10<CR>
nnoremap <C-left> :vertical resize -10<CR>

nnoremap <leader>n :NnnPicker '%:p:h'<CR>

map <leader>a za<cr>
map <leader>s :w<cr>
map <leader>q :q<cr>
map <leader>v :tabedit ~/.vimrc<CR>
map <leader>w :NvimTreeFindFileToggle<CR>
map _ :NvimTreeResize -20<CR>
map + :NvimTreeResize +20<CR>

" fzf commands [see telescope in init.vim] 
map <leader>b :Git blame<CR>

" esay align motions
vmap <Enter> <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
nmap -  <Plug>(choosewin)

au! User GoyoEnter nested call funs#goyo_enter()
au! User GoyoLeave nested call funs#goyo_leave()

au filetype html,eruby,slim imap <buffer><expr><tab> funs#zen_html_tab()
au filetype mail setlocal formatoptions+=nawrtcp

" customize split borders
"hi VertSplit ctermbg=NONE guibg=NONE ctermfg='0x282a36'
"highlight VertSplit cterm=NONE

"set fillchars+=vert:\â”Š
set fillchars+=vert:\ 

let g:choosewin_overlay_enable = 1

" vim-notes doc folder
let g:notes_directories = ["~/Dropbox/Sketch/Notes/2021"]

" vimux panel height
let g:VimuxHeight = "15"

" Collect org files to show in agenda
let g:org_agenda_files = ['~/Dropbox/Sketch/Orgs/*.org']

" Scroll down supertab behavior
let g:SuperTabDefaultCompletionType = "<c-n>"
let g:instant_markdown_autostart = 0

" Goyo zen writing 
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240

let g:table_mode_corner='|'

let g:nnn#layout = { 'window': { 'width': 0.6, 'height': 0.6, 'highlight': 'Debug' } }

"let g:dwm_map_keys = 0
"nmap <C-Space> <Plug>DWMFocus
"let g:dwm_master_pane_width=90

" performance tuning
runtime macros/matchit.vim     " performanc issue?
let loaded_matchparen=1 " Don't load matchit.vim (paren/bracket matching)
set noshowmatch         " Don't match parentheses/brackets
set lazyredraw          " Wait to redraw
set scrolljump=8        " Scroll 8 lines at a time at bottom/top
let html_no_rendering=1 " Don't render italic, bold, links in HTML

